apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: app-jwt
config:
  secret_is_base64: false
plugin: jwt
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: jwt-claims-headers
disabled: false
plugin: jwt-claims-headers
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: rewrite-two-request
config: 
  replace:
    uri: '/$(uri_captures[1])/$(uri_captures[2])'
plugin: request-transformer
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: rewrite-one-request
config: 
  replace:
    uri: '/$(uri_captures[2])'
plugin: request-transformer
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gateway-auth
  annotations:    
    kubernetes.io/ingress.class: kong
    konghq.com/plugins: rewrite-two-request
spec:
  rules:
  - http:
      paths:
      - path: /api/(.*)/(.*)
        backend:
          serviceName: url-shortener-auth
          servicePort: 8080
      - path: /api/(.*)/(.*)
        backend:
          serviceName: url-shortener-auth
          servicePort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gateway-shorten
  annotations:
    konghq.com/plugins: rewrite-one-request,app-jwt,jwt-claims-headers
    kubernetes.io/ingress.class: kong
spec:
  rules:
  - http:
      paths:
      - path: /api/shorten/(.*)
        backend:
          serviceName: url-shortener-shorten
          servicePort: 5000
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: admin
  annotations:
    kubernetes.io/ingress.class: kong
username: admin
credentials:
  - app-admin-jwt
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: plain-user
  annotations:
    kubernetes.io/ingress.class: kong
username: plain-user
credentials:
  - app-user-jwt
---
apiVersion: v1
kind: Secret
metadata:
  name: app-user-jwt
type: Opaque
stringData:
  algorithm: HS256
  key: "user-issuer"
  kongCredType: jwt
  secret: 2z1b0KoejjY4TFuZ5LWYToWjyoIkB_47KfetZl6DH5Q
